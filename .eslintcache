[{"F:\\Interview\\google-calculator\\src\\App.js":"1","F:\\Interview\\google-calculator\\src\\components\\KeyPadComponent.js":"2","F:\\Interview\\google-calculator\\src\\context\\historyContext.js":"3","F:\\Interview\\google-calculator\\src\\reportWebVitals.js":"4"},{"size":3851,"mtime":1606185068446,"results":"5","hashOfConfig":"6"},{"size":2514,"mtime":1606185026617,"results":"7","hashOfConfig":"6"},{"size":119,"mtime":1606162886070,"results":"8","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},"1o4y2nw",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Interview\\google-calculator\\src\\App.js",["20","21"],"import React, { useState} from 'react';\r\nimport './App.css';\r\nimport DisplayResult from './components/ResultComponent';\r\nimport KeyPad from \"./components/KeyPadComponent\";\r\nimport historyContext from './context/historyContext'\r\n\r\nconst App = () => {\r\n\r\n    \r\n    const [result,setResult] = useState(\"\")\r\n    let [prev, setPrev] = useState(\"\")\r\n    const [history,setHistory] = useState([])\r\n    const [ac, setAc] = useState(false)\r\n    const [statbar,setStatbar] = useState(\"Ans = 0\")\r\n\r\n\r\n    const op_arr = ['%','/','*','-','=','+']\r\n\r\n    if(history.length > 0){\r\n    let temp = history[history.length-1]\r\n    let key = Object.keys(temp)\r\n    key = key[0]\r\n    }\r\n\r\n    const onClick = (button) => {\r\n\r\n        if(history.length > 0){\r\n            let temp = history[history.length-1]\r\n            let key = Object.keys(temp)\r\n            key = key[0]\r\n            setStatbar(\"Ans = \" + temp[key])\r\n            }\r\n\r\n        if(button === \"AC\"){\r\n            reset()\r\n            setAc(false)\r\n        } else if(prev === \"=\" && !op_arr.includes(button) ){\r\n            setResult(button)\r\n            setPrev(button)\r\n            setAc(false)\r\n        } else if(button === \"=\"){\r\n            if(prev!==\"%\" && op_arr.includes(prev)){\r\n            } else {\r\n                calculate()\r\n                setAc(true)\r\n            }\r\n        } else  if(button === \"CE\"){\r\n            backspace()\r\n        } else if(button === '%'){\r\n            setResult(result + \"*(1/100)\")\r\n            setPrev(button)\r\n        } else if(op_arr.includes(button) && (prev === button)){\r\n                \r\n        } else if(op_arr.includes(button) && op_arr.includes(prev)){\r\n            if(prev === \"%\" && op_arr.includes(button)){\r\n                setResult(result+button)\r\n                setPrev(button)\r\n            } else {\r\n                let temp = history[history.length-1]\r\n                let key = Object.keys(temp)\r\n                key = key[0]\r\n            // console.log(button, prev,result)\r\n            if(temp[key] === result){\r\n                setResult(result+button)\r\n                setPrev(button)\r\n            } else {\r\n                \r\n                setResult(result.slice(0,-1)+button)\r\n                setPrev(button)\r\n            }\r\n            }\r\n\r\n        } else if (prev === \"Error\"){\r\n            setResult(button)\r\n            setPrev(button)\r\n        } else {\r\n                setResult(result+button)\r\n                setPrev(button)\r\n        }\r\n        \r\n    };\r\n\r\n    const calculate = () => {\r\n        var checkResult = ''\r\n        checkResult = result\r\n\r\n        try {\r\n            let temp1 = (eval(checkResult)).toString()\r\n            setStatbar(checkResult)\r\n            setResult(temp1)\r\n            setPrev(\"=\")\r\n            let obj = {}\r\n            obj[checkResult] = temp1\r\n            setHistory([...history,obj])\r\n\r\n        } catch (e) {\r\n            setResult(\"Error\")\r\n            setPrev(\"Error\")\r\n\r\n        }\r\n    };\r\n\r\n    const reset = () => {\r\n        setResult(\"\")\r\n    };\r\n\r\n    const backspace = () => {\r\n\r\n        // console.log(typeof(result))\r\n        if (result === (\"Error\") || result === \"Infinity\" ){\r\n            setResult(\"\")\r\n        } else {\r\n        setResult(result.slice(0, -1))\r\n        }\r\n    };\r\n\r\n    \r\n        return (\r\n            <historyContext.Provider value={{statbar,setResult,setPrev,setAc}}>\r\n                <div className=\"calculator-body\">\r\n                    <h1>Google Calculator</h1>\r\n                    <DisplayResult \r\n                    onClick={onClick} \r\n                    result={result} \r\n                    history={history}\r\n                    />\r\n                    <KeyPad\r\n                    ac = {ac} \r\n                    onClick={onClick}/>\r\n                </div>\r\n            </historyContext.Provider>\r\n        );\r\n    \r\n}\r\n\r\nexport default App;\r\n",["22","23"],"F:\\Interview\\google-calculator\\src\\components\\KeyPadComponent.js",[],"F:\\Interview\\google-calculator\\src\\context\\historyContext.js",["24"],"F:\\Interview\\google-calculator\\src\\reportWebVitals.js",[],{"ruleId":"25","severity":1,"message":"26","line":22,"column":11,"nodeType":"27","messageId":"28","endLine":22,"endColumn":14},{"ruleId":"29","severity":1,"message":"30","line":88,"column":26,"nodeType":"31","messageId":"32","endLine":88,"endColumn":30},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"25","severity":1,"message":"37","line":1,"column":8,"nodeType":"27","messageId":"28","endLine":1,"endColumn":13},"no-unused-vars","'key' is assigned a value but never used.","Identifier","unusedVar","no-eval","eval can be harmful.","CallExpression","unexpected","no-native-reassign",["38"],"no-negated-in-lhs",["39"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation"]